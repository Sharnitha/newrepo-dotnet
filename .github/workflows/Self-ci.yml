name: Self-Hosted CI

on:
  workflow_dispatch:
  push:
    branches: 
      - feature-private
 
# env:   
#   DOTNET_VERSION: '6.0.422' 
#   DOTNET_INSTALL_DIR: "./.dotnet" 

jobs:
  # Dotnet_Task:
  #   runs-on: self-hosted 
  #   steps:
  #   - name: Checkout code 
  #     uses: actions/checkout@v4
  #   - name: Setup .NET version
  #     uses: actions/setup-dotnet@v3
  #     with:
  #       dotnet-version: 6.0.x
  #   - name: Listing Dotnet version
  #     run: dotnet --version
  #   - name: listing files
  #     run: ls
  #   - name: dotnet restore
  #     run: 
  #       dotnet restore
        
  # Frontend_Dotnet_Build:
  #   runs-on: self-hosted  
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Setup .NET Core SDK
  #       uses: actions/setup-dotnet@v4 
  #       with:
  #         dotnet-version: ${{ env.DOTNET_VERSION }}
  #     - name: Checking Dotnet version
  #       run: dotnet --version
  #     - name: Install Dependency
  #       run: dotnet restore
  #     - name: Dotnet build
  #       run: dotnet build -c release

  Frontend_Docker_Build:
    runs-on: self-hosted
    # needs: Frontend_Dotnet_Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
      - name: Docker build using Dockerfile
        run: |
          az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{secrets.DOCKER_TENANT}}
          docker build -t githubcisharni.azurecr.io/demoenv:${{ github.run_id }} .
          docker login githubcisharni.azurecr.io -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push githubcisharni.azurecr.io/demoenv:${{ github.run_id }} 
          
        

          
       # az containerapp update  -n containerappname  -g sharnitha-poc --yaml back.yaml
          
      # - name: Replace token
      #   run: |
      #     LOG_DEFAULT=$(az keyvault secret show --name logLevel-default --vault-name keyvault110624 --query value -o tsv)
      #     echo $LOG_DEFAULT
      #     MICROSOFT=$(az keyvault secret show --name microsoft-AspNetCore --vault-name keyvault110624 --query value -o tsv)
      #     echo "Appsettingslogdefault"
      #     sed -i "s/{__logLevel-default__}/$LOG_DEFAULT/g" appsettings.json
      #     cat appsettings.json
      #     echo "microsoft asp"
      #     sed -i "s/{__microsoft-AspNetCore__}/$MICROSOFT/g" appsettings.json  
      #     cat appsettings.json

      # - uses: azure/webapps-deploy@v2
      #   with:
      #       app-name: 'webapp130624'
      #       publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}
      #       images: 'githubcisharni.azurecr.io/demoenv:${{ github.run_id }}'
            # package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}


      # - name: Fetch secrets from Azure Key Vault
      #   id: fetch-secrets
      #   run: |
      #     export SECRET_1=$(az keyvault secret show --vault-name 'keyvault110624' --name 'logleveldefault' --query 'value' -o tsv)
      #     echo $SECRET_1
      #     export SECRET_2=$(az keyvault secret show --vault-name 'keyvault110624' --name 'microsoft-AspNetCore' --query 'value' -o tsv)
      #     echo $SECRET_2

      # - name: Build and deploy Container App
      #   uses: azure/container-apps-deploy-action@v1
      #   with:
      #     acrName:  githubcisharni         
      #     acrUsername: githubcisharni          
      #     acrPassword: t7/XMWigN+CfwFE5BC+i671BCPYToWQXGf3c0G5uQV+ACRCystt1
      #     containerAppName: containerapps      
      #     resourceGroup: sharnitha-poc
      #     imageToDeploy: githubcisharni.azurecr.io/demoenv:${{ github.run_id }} 

      - name: Docker build using Dockerfile
        run: |
          az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{secrets.DOCKER_TENANT}}
          az containerapp update --name containerapps --resource-group sharnitha-poc --image githubcisharni.azurecr.io/demoenv:${{ github.run_id }} --set-env-vars "demo=1.2.3.4.5" "172.168.9.86=testing"
          
      #     replace_env_vars: true
      #     env: |
      #       SECRET_1=$SECRET_1
      #       SECRET_2=$SECRET_2


      # - name: Azure CLI script
      #   id: step_one
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #       echo secret=$(az keyvault secret download --vault-name Pracvault123 --name MySecret --query value) >> $GITHUB_ENV
              
      # - name: Use the value
      #   id: step_two
      #   run: |
      #       echo "${{ env.secret }}"

# name: Self-Hosted CI

# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - feature-private

# env:   
#   DOTNET_VERSION: '6.0.422' 
#   DOTNET_INSTALL_DIR: "./.dotnet" 

# jobs:
  # Dotnet_Build:
  #   runs-on: self-hosted  
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   - name: Setup .NET Core SDK
  #     uses: actions/setup-dotnet@v4 
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}
  
  #   - name: Checking Dotnet version
  #     run: dotnet --version
  #   - name: Install Dependency
  #     run: dotnet restore
  #   - name: Dotnet build
  #     run: dotnet build -c release

  # Docker_Build:
  #   runs-on: self-hosted
  #   # needs: Dotnet_Build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
        
  #     - name: Docker build using Dockerfile
  #       run: |
  #         docker build -t githubcisharni.azurecr.io/demoenv:${{ github.run_id }} .
          
  #     - name: Aqua Security Trivy
  #       uses: aquasecurity/trivy-action@0.18.0
  #       with:   
  #         exit-code: 0
  #         severity: LOW,MEDIUM,HIGH,CRITICAL
  #         format: table
  #         image-ref: githubcisharni.azurecr.io/demoenv:${{ github.run_id }}
          
      # - name: Azure CLI
      #   run: az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{secrets.AZ_TENANT}}

      # - name: Docker build using Dockerfile
      #   run: |
      #     docker login githubcisharni.azurecr.io -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
      #     docker push githubcisharni.azurecr.io/demoenv:${{ github.run_id }}  
      #     docker history githubcisharni.azurecr.io/demoenv:${{ github.run_id }}
    

  # Sonar:
  #   runs-on: self-hosted
  #   needs: Dotnet_Build
  #   steps: 
  #   - name: Checkout code
  #     uses: actions/checkout@v4      
        
  #   - name: Verify Java version
  #     run: java --version

  #   - name: Setup .NET version
  #     uses: actions/setup-dotnet@v3
  #     with:
  #       dotnet-version: 6.0.x
      
  #   - name: SonarScanner tool installed
  #     run: |
  #       echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
  #     # dotnet tool install --global dotnet-sonarscanner
        
      
  #   - name: Begin SonarQube analysis
  #     run: |
  #       dotnet sonarscanner begin /k:"demoproject" \
  #       /d:sonar.login="admin" \
  #       /d:sonar.password="Admin@123" \
  #       /d:sonar.host.url="http://20.55.36.68:9000/" \
  #       /v:"${{ github.run_number }}" \
  #       /d:sonar.cs.vstest.reportsPaths="${{ github.workspace }}/*.trx" \
  #       /d:sonar.cs.vscoveragexml.reportsPaths="${{ github.workspace }}/TestResults/coverage.xml"
   
  #   - name: Check .sonarqube Directory
  #     run: |
  #       dotnet build -c release -o app/publish
        
  #   - name: End SonarQube analysis
  #     run: |
  #       dotnet sonarscanner end /d:sonar.login="admin" /d:sonar.password="Admin@123"
