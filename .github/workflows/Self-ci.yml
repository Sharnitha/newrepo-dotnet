name: Frontend-CI
on:
  workflow_dispatch: 
  push:
    branches:     
    - branchswitch        
     
jobs:  
  set_environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Determine environment based on branch
        id: set_env
        run: |
          if [ "$GITHUB_REF" == "branchswitch" ]; then
            echo "environment=DEV" >> "$GITHUB_ENV"
          elif [ "$GITHUB_REF" == "refs/heads/perf" ]; then
            echo "environment=PROD" >> "$GITHUB_ENV"
          else 
             echo "environment=DEV" >> "$GITHUB_ENV"
          fi
    outputs:
      environment: ${{ env.environment }}
  
  Docker_Build_ImagePush:
    runs-on: ubuntu-latest
    needs: set_environment
    environment: ${{ needs.set_environment.outputs.environment }}
    env:
      Environments: ${{ needs.set_environment.outputs.environment }}
      workspace: ${{ github.workspace }}
    steps:
       - name: Checkout code
         uses: actions/checkout@v4 
         
       - name: Docker Build
         run: docker build -t ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }} .
       - name: Azure CLI
         run: | 
          az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{secrets.DOCKER_TENANT}}  
          az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}
        
       - name: Docker build using Dockerfile 
         run: |
          docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }}  
          docker history ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }}
          docker image prune -a -f
    outputs:
      environment: ${{ env.Environments }}
      
  Deploy:
    runs-on: ubuntu-latest
    needs: Docker_Build_ImagePush
    environment: ${{ needs.Docker_ImagePush.outputs.environment }}
    env:
      workspace: ${{ github.workspace }}
    steps:
      - name: Replacetoken
        run: echo "HI"
          
            # az webapp config appsettings set --name pocfrontwebapp --resource-group POCnonprod --settings @demo/dev-settings.json
            
      # - uses: azure/webapps-deploy@v2
      #   with: 
      #       app-name: 'pocfrontwebapp' 
      #       publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}
      #       images: 'nonprodfrontendacr.azurecr.io/frontend:${{ github.run_id }}'
            
        # using keyvault secrets
      # docker login nonprodfrontendacr.azurecr.io -u ${{ steps.GetSecretAction.outputs.docker-login-secret }} -p ${{ steps.GetSecretAction.outputs.docker-pass-secret }}
