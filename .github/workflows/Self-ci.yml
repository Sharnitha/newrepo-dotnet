name: IIS

on:
  workflow_dispatch:
  push: 
    branches:  
      - sed
        
jobs:   
  set_environment:    
    runs-on: self-hosted  
    # needs: demo 
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Determine environment based on branch
        id: set_env
        run: |
          if [ "$GITHUB_REF" == "refs/heads/sed" ]; then
            echo "environment=DEV" >> "$GITHUB_ENV"
          elif [ "$GITHUB_REF" == "refs/heads/qa" ]; then
            echo "environment=QA" >> "$GITHUB_ENV"
          elif [[ "$GITHUB_REF" =~ ^refs/heads/release/.* ]]; then
            echo "environment=PROD" >> "$GITHUB_ENV"
          else  
            echo "environment=DEV" >> "$GITHUB_ENV"
          fi
          
    outputs:
      environment: ${{ env.environment }}

  Replace_Token:
    runs-on: self-hosted
    needs: set_environment
    environment: ${{ needs.set_environment.outputs.environment }}
    env:
      Environments: ${{ needs.set_environment.outputs.environment }}
      workspace: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        
      # - name: Azure CLI
      #   run: | 
      #     az login --service-principal -u ${{ secrets.AZ_LOGIN }} -p ${{ secrets.AZ_PASSWORD }} --tenant ${{secrets.AZ_TENANT}}  
      #     az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}

      - name: Get secrets from Key Vault and replace placeholders
        run: |
            ApiKey="${{ secrets.APIKEY }}"
            BaseUrl=${{ secrets.BASEURL }}
            escaped_API_KEY=$(printf '%s' "$ApiKey" | sed 's/[$&]/\\&/g; s/\\/\\\\/g')
            sed -i "s|{__ApiKey__}|${escaped_API_KEY}|g" appsettings.json
            escaped_BASE_URL=$(printf '%s' "$BaseUrl" | sed 's/[&/\$\;]/\\&/g')
            sed -i "s|{__BaseUrl__}|${escaped_BASE_URL}|g" appsettings.json
            echo "Updated appsettings.json"
          
      # - name: Get secrets from Key Vault and replace placeholders
      #   run: |
      #    BaseUrl=${{ secrets.BASEURL }}
      #    ApiKey=${{ secrets.APIKEY }}

      #    escaped_BASE_URL=$(printf '%s' "$BaseUrl" | sed 's/[&/\$\;]/\\&/g')
      #    sed -i "s|{__BaseUrl__}|${escaped_BASE_URL}|g" appsettings.json
      #     echo "Updated appsettings.json"
      #   # escaped_API_KEY=$(printf '%s' "$ApiKey" | sed 's/[&]/\\&/g')
         # sed -i "s|{__ApiKey__}|${escaped_API_KEY}|g" appsettings.json
      #  echo "Updated appsettings.json"
      # #    escaped_API_KEY=$(printf '%s' "$ApiKey" | sed 's/[&]/\\&/g')
      #    sed -i "s|{__ApiKey__}|${escaped_API_KEY}|g" appsettings.json
      #    echo "Token replaced successfully!"
        # escaped_API_KEY=$(printf '%s' "$ApiKey" | sed 's/[&/\$\;]/\\&/g')
         # sed -i "s|{__ApiKey__}|${escaped_API_KEY}|g" appsettings.json
        # echo "Token replaced successfully!"
        # sed -i "s#{__BaseUrl__}#$escaped_BASE_URL#g" appsettings.json
         # escaped_API_KEY=$(printf '%s' "$ApiKey" | sed 's/[/&/$$]/\\&/g')
         # sed -i "s#{__ApiKey__}#$escaped_API_KEY#g" appsettings.json
        shell: bash
    outputs:
      environment: ${{ env.Environments }}
      
         # # sed -i 's/{__BaseUrl__}/'"$BaseUrl"'/g' appsettings.json 
         # # sed -i 's/{__ApiKey__}/'"$ApiKey"'/g' appsettings.json
         # sed -i "s#{__BaseUrl__}#$BaseUrl#g" appsettings.json
         # sed -i "s#{__ApiKey__}#$ApiKey#g" appsettings.json
         # echo "Placeholders replaced successfully."
        
     
