name: Frontend-CI

on:
  push:
    branches:
      - branchswitch
      - branch01

jobs:
  set_environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine environment based on branch
        id: set_env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/branchswitch" ]; then
            echo "environment=DEV,QA" >> "$GITHUB_ENV"
          elif [ "${{ github.ref }}" == "refs/heads/branch01" ]; then
            echo "environment=PROD" >> "$GITHUB_ENV"
          else 
            echo "environment=QA" >> "$GITHUB_ENV"
          fi
    outputs:
      environment: ${{ steps.set_env.outputs.environment }}

  CI:
    runs-on: ubuntu-latest
    needs: set_environment
    environment: ${{ needs.set_environment.outputs.environment }}
    env:
      Environments: ${{ needs.set_environment.outputs.environment }}
      workspace: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }} .

      - name: Azure CLI
        id: azure_login
        run: |
          az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{ secrets.DOCKER_TENANT }}
          az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}

  Deploy_to_Dev:
    runs-on: ubuntu-latest
    needs: CI
    environment:
      name: DEV
    steps:
      - name: Fetch Dev credentials and deploy
        run: |
          # Fetch credentials or configuration for Dev environment
          # Replace with your actual steps to fetch Dev credentials
          echo "Fetching Dev credentials..."

          # Assuming $JSONFILE_DEV is defined and contains appropriate settings for Dev
          JSONFILE_DEV="dev_settings.json"
          az webapp config appsettings set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RG }} --settings @"$JSONFILE_DEV"

          # Deploy to Dev environment
          echo "Deploying to Dev environment..."
          az webapp config container set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RG }} --docker-custom-image-name '${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }}'

  Deploy_to_QA:
    runs-on: ubuntu-latest
    needs: Deploy_to_Dev
    environment:
      name: QA
    steps:
      - name: Fetch QA credentials and deploy
        run: |
          # Fetch credentials or configuration for QA environment
          # Replace with your actual steps to fetch QA credentials
          echo "Fetching QA credentials..."

          # Assuming $JSONFILE_QA is defined and contains appropriate settings for QA
          JSONFILE_QA="qa_settings.json"
          az webapp config appsettings set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RG }} --settings @"$JSONFILE_QA"

          # Deploy to QA environment
          echo "Deploying to QA environment..."
          az webapp config container set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RG }} --docker-custom-image-name '${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }}'
