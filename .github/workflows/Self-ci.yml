name: Frontend-CI

on:
  workflow_dispatch: 
  push: 
    branches:   
      - nonroot
        
jobs:   
  set_environment:    
    runs-on: self-hosted 
    # needs: demo 
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Determine environment based on branch
        id: set_env
        run: |
          if [ "$GITHUB_REF" == "refs/heads/nonroot" ]; then
            echo "environment=DEV" >> "$GITHUB_ENV"
          elif [ "$GITHUB_REF" == "refs/heads/qa" ]; then
            echo "environment=QA" >> "$GITHUB_ENV"
          elif [[ "$GITHUB_REF" =~ ^refs/heads/release/.* ]]; then
            echo "environment=PROD" >> "$GITHUB_ENV"
          else  
            echo "environment=DEV" >> "$GITHUB_ENV"
          fi
          
    outputs:
      environment: ${{ env.environment }}

  # sonar:
  #   if: github.ref == 'refs/heads/feature/test'
  #   runs-on: ubuntu-latest
  #   needs: set_environment
  #   steps:
  #     - name: list
  #       run: echo "Hello"

  CI:
    runs-on: self-hosted
    needs: set_environment
    environment: ${{ needs.set_environment.outputs.environment }}
    env:
      Environments: ${{ needs.set_environment.outputs.environment }}
      workspace: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        
      # - name: "Set current date as env variable"
      #   run: |
      #    echo "builddate=$(TZ="America/New_York" date +'%Y-%m-%d_%H_%M_%S')" >> $GITHUB_OUTPUT
      #   id: version  

      # - name: Docker Build 
      #   run: |
      #     dotnet publish dotnet-folder.csproj -c release -o blobzip
          
      # - name: Zip Folder
      #   run: |
      #     zip -r ${{ steps.version.outputs.builddate }}.zip blobzip

      # - name: Transfer
      #   run: |
      #     azcopy login --service-principal --application-id 37ca0f99-5f85-4eb3-897a-c9360a312e66 --tenant-id 84f1e4ea-8554-43e1-8709-f0b8589ea118
      #     azcopy copy '${{ steps.version.outputs.builddate }}.zip' 'https://storagedemonam.blob.core.windows.net/demo'
      # azcopy copy '${{ steps.version.outputs.builddate }}.zip' 'https://storademo.blob.core.windows.net/storage/${{ steps.version.outputs.builddate }}.zip'
         
        # azcopy copy '${{ steps.version.outputs.builddate }}.zip' '${{ vars.BLOBSTORAGE_PATH }}?${{ secrets.BLOB_SAASTOKEN }}'
# azcopy copy '${{ steps.version.outputs.builddate }}.zip' 'https://storademo.blob.core.windows.net/storage?sp=racwdl&st=2024-10-07T05:54:58Z&se=2024-10-07T13:54:58Z&spr=https&sv=2022-11-02&sr=c&sig=1xaJhW%2Fv5WO7bsR5anSenuC3%2FUV2C08%2FTSC391nubRc%3D'
     
      - name: Docker Build
        run: |
          docker build -t githubcisharnidemo.azurecr.io/demoenv:${{ github.run_id }} .
          trivy image --severity "HIGH,CRITICAL" --vuln-type "os,library" --exit-code "0" githubcisharnidemo.azurecr.io/demoenv:${{ github.run_id }}
          
      - name: azure container registry
        run: |
          docker login githubcisharnidemo.azurecr.io -u githubcisharnidemo -p ohshJwMmR9vCPOfHMBAfFm36ApfZ5MQuQPJNyYFTjF+ACRBGkKCH
          docker push githubcisharnidemo.azurecr.io/demoenv:${{ github.run_id }} 
          
      
       # az login
          # docker build -t githubcisharnidemo.azurecr.io/demoenv:${{ github.run_id }} .
          
       # docker login -u githubcisharnidemo
          # docker push githubcisharnidemo.azurecr.io/demoenv:${{ github.run_id }} 

     # apt-get install zip -y
          # zip -r output.zip publish/  
          
  Staging_Slot_Deploy:
    if: github.ref == 'refs/heads/feature/test'
    # continue-on-error: false
    runs-on: ubuntu-latest
    needs: [CI]
    environment: ${{ needs.CI.outputs.environment }}
    env:
      workspace: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  

      - name: echo command
        run: echo "Test Branch"

      # - name: Azure login
      #   run: az login
        
      # - name: Replacetoken
      #   run: |
      #     az webapp config appsettings set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RG }} --settings @"${{ secrets.JSONFILE }}"
       
      # - uses: azure/webapps-deploy@v2
      #   with: 
      #     app-name: ${{ secrets.WEBAPP_NAME }}                                          
      #     publish-profile: ${{ secrets.APP_SLOT_PUBLISH }}
      #     slot-name: ${{ secrets.SLOT_NAME }}
      #     images: 'githubcisharnidemo.azurecr.io/demoenv:${{ github.run_id }}'

      # - uses: azure/webapps-deploy@v2
      #   with:  
      #     app-name: ${{ secrets.WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}
      #     images: '${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }}'
      
  release_Slot_Deploy:
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    needs: CI
    environment: ${{ needs.CI.outputs.environment }}
    env:
      workspace: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  

      - name: echo command
        run: echo "Release Branch"
        
  # Prod_Slot_Deploy:
  #   if: github.ref == 'refs/heads/feature/test'
  #   continue-on-error: false
  #   runs-on: ubuntu-latest
  #   needs: Staging_Slot_Deploy
  #   environment: DEV
  #   env:
  #     workspace: ${{ github.workspace }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4  
  #     - uses: trstringer/manual-approval@v1
  #       timeout-minutes: 5
  #       with:
  #         secret: ${{ secrets.TOKEN }}
  #         approvers: Sharnitha
  #         minimum-approvals: 1
  #         issue-title: "Deploying v1.3.5 to deploy from deploy"
  #         issue-body: "Please approve or deny the deployment of v1.3.5."
  #         exclude-workflow-initiator-as-approver: false
  #         additional-approved-words: ''
  #         additional-denied-words: ''

  #     - name: Swap the slot
  #       run: |
  #         az login
  #         az webapp deployment slot swap --resource-group ${{ secrets.RG }} --name webappname01 --slot ${{ secrets.SLOT_NAME }} --target-slot production
  #--------------------------------------------------------------------------------------

      # - name: Azure login
      #   run: az login
        
      # - name: Replacetoken
      #   run: |
      #     echo "Dev Deploy"
      #     az webapp config appsettings set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RG }} --settings @"${{ secrets.JSONFILE }}"
       
      # - uses: azure/webapps-deploy@v2
      #   with:  
      #     app-name: ${{ secrets.WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}
      #     images: '${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }}'

  # QA_Deploy:
  #   if: github.ref == 'refs/heads/qa'
  #   runs-on: ubuntu-latest
  #   needs: CI
  #   environment: QA
  #   env:
  #     workspace: ${{ github.workspace }}
  #   steps:
  #      - name: Replacetoken
  #        run: |
  #          echo "qa Deploy"
  #     - uses: trstringer/manual-approval@v1
  #       timeout-minutes: 5
  #       with:
  #         secret: ${{ secrets.TOKEN }}
  #         approvers: Sharnitha
  #         minimum-approvals: 1
  #         issue-title: "Deploying v1.3.5 to deploy from deploy"
  #         issue-body: "Please approve or deny the deployment of v1.3.5."
  #         exclude-workflow-initiator-as-approver: false
  #         additional-approved-words: ''
  #         additional-denied-words: ''
          
  #     - name: Checkout code
  #       uses: actions/checkout@v4 
        
  #     - name: Replacetoken
  #       run: |
  #         az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{ secrets.DOCKER_TENANT }}  
  #         az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}
  #         az webapp config appsettings set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RG }} --settings @"${{ secrets.JSONFILE }}"

  #     - uses: azure/webapps-deploy@v2
  #       with:  
  #         app-name: ${{ secrets.WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}
  #         images: '${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }}'

  # Perf_Deploy:
  #   if: github.ref == 'refs/heads/perf'
  #   runs-on: ubuntu-latest
  #   needs: CI
  #   environment: ${{ needs.CI.outputs.environment }}
  #   env:
  #     workspace: ${{ github.workspace }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4 
        
  #     - name: Replacetoken
  #       run: |
  #         az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{ secrets.DOCKER_TENANT }}  
  #         az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}
  #         az webapp config appsettings set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RG }} --settings @"${{ secrets.JSONFILE }}"

  #     - uses: azure/webapps-deploy@v2
  #       with: 
  #         app-name: ${{ secrets.WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}
  #         images: '${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ github.run_id }}'
